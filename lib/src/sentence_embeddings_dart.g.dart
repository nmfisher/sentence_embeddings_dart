// AUTO GENERATED FILE, DO NOT EDIT.
//
// Generated by `package:ffigen`.
// ignore_for_file: type=lint
import 'dart:ffi' as ffi;

@ffi.Native<ffi.Bool Function(ffi.Pointer<ffi.Void>, ffi.Size)>(
    symbol: 'sentence_embeddings_load_model',
    assetId: 'package:sentence_embeddings_dart/sentence_embeddings_dart.dart')
external bool sentence_embeddings_load_model(
  ffi.Pointer<ffi.Void> data,
  int length,
);

@ffi.Native<ffi.Void Function()>(
    symbol: 'sentence_embeddings_unload_model',
    assetId: 'package:sentence_embeddings_dart/sentence_embeddings_dart.dart')
external void sentence_embeddings_unload_model();

@ffi.Native<ffi.Int32 Function()>(
    symbol: 'sentence_embeddings_get_model_dimension',
    assetId: 'package:sentence_embeddings_dart/sentence_embeddings_dart.dart')
external int sentence_embeddings_get_model_dimension();

@ffi.Native<
        ffi.Void Function(
            ffi.Pointer<ffi.Int64>, ffi.Int32, ffi.Pointer<ffi.Float>)>(
    symbol: 'sentence_embeddings_embed',
    assetId: 'package:sentence_embeddings_dart/sentence_embeddings_dart.dart')
external void sentence_embeddings_embed(
  ffi.Pointer<ffi.Int64> tokens,
  int length,
  ffi.Pointer<ffi.Float> out,
);

@ffi.Native<ffi.Void Function(ffi.Pointer<ffi.Float>)>(
    symbol: 'sentence_embeddings_free',
    assetId: 'package:sentence_embeddings_dart/sentence_embeddings_dart.dart')
external void sentence_embeddings_free(
  ffi.Pointer<ffi.Float> result,
);
